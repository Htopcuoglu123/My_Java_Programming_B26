Functional Interface & Lambda

---------------------------------------------------------------------------------------
Create a functional interface named ListFunction and define the following abstract method:

	generic type: <T, R>

	R apply(List<T>  list);

	Use ListFunction functional interface to:
		1.1 Create a function that can return the maximum number from a list of Integer

		1.2 Create a function that can return the minimum number from a list of Integer

		1.3 Create a function that can return the longest String from a List of String

		1.4 Create a function that can return the shortest String from a List of String

		1.5 Create a function that can convert List of integer to int array

		1.6 Create a function that can convert List of double to double array

---------------------------------------------------------------------------------------

Use Predicate Functional interface to:
		1.1 Create a function that can verify if a number contains duplicate digits

		1.2 Create a function that can verify if a password is a strong password. Characteristics of strong passwords are:
		        Password must be at least have 8 characters long, and should not contain space
		        Password should at least contain one upper case letter
		        Password should at least contain one lower case letter
		        Password should at least contain one special characters
		        Password should at least contain a digit

---------------------------------------------------------------------------------------

Use Consumer functional interface to:

		1.1	Create a function that prints the first and last element of an array

		1.2 Create a function that prints the middle character/s of a String

---------------------------------------------------------------------------------------

Use Function functional interface to:
		1.1 Create a function that can return the sum of digits from a string that contains number digits

		1.2 Create a function that can convert a Set of Integers to List of Integers

		1.3 Create a function that can return the reversed version of a String array

---------------------------------------------------------------------------------------